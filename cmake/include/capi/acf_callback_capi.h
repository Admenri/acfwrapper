// Copyright (c) 2025 Admenri. All rights reserved.
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//
// $hash=722c4a74b23ffe0c15cdf3c1f5a3ed6c569d347e$
//

#ifndef ACF_INCLUDE_CAPI_ACF_CALLBACK_CAPI_H_
#define ACF_INCLUDE_CAPI_ACF_CALLBACK_CAPI_H_
#pragma once

#include "include/capi/acf_values_capi.h"
#include "include/internal/acf_scoped_refptr.h"

#ifdef __cplusplus
extern "C" {
#endif

struct _acf_dictionary_value_t;
struct _acf_value_t;

///
/// Generic complete event notify.
///
typedef struct _acf_complete_handler_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Called when task has been completed.
  ///
  void(ACF_CALLBACK* on_complete)(struct _acf_complete_handler_t* self,
                                  int success);
} acf_complete_handler_t;

///
/// Complete callback with value
///
typedef struct _acf_complete_value_handler_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Called when task has been completed.
  ///
  void(ACF_CALLBACK* on_complete)(struct _acf_complete_value_handler_t* self,
                                  struct _acf_value_t* value);
} acf_complete_value_handler_t;

///
/// Implement this structure to receive string values asynchronously.
///
typedef struct _acf_string_visitor_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Method that will be executed.
  ///
  void(ACF_CALLBACK* visit)(struct _acf_string_visitor_t* self,
                            const acf_string_t* string);
} acf_string_visitor_t;

///
/// Complete event callback generic
///
typedef struct _acf_callback_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Continue process event
  ///
  void(ACF_CALLBACK* cont)(struct _acf_callback_t* self, int cancel);
} acf_callback_t;

#ifdef __cplusplus
}
#endif

#endif  // ACF_INCLUDE_CAPI_ACF_CALLBACK_CAPI_H_
