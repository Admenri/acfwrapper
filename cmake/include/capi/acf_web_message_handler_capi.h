// Copyright (c) 2025 Admenri. All rights reserved.
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//
// $hash=0121939385aaacb1cff6102143129337045a0330$
//

#ifndef ACF_INCLUDE_CAPI_ACF_WEB_MESSAGE_HANDLER_CAPI_H_
#define ACF_INCLUDE_CAPI_ACF_WEB_MESSAGE_HANDLER_CAPI_H_
#pragma once

#include "include/capi/acf_browser_capi.h"
#include "include/capi/acf_frame_capi.h"
#include "include/capi/acf_values_capi.h"
#include "include/internal/acf_scoped_refptr.h"
#include "include/internal/acf_types.h"

#ifdef __cplusplus
extern "C" {
#endif

struct _acf_frame_t;
struct _acf_value_t;
struct _acf_web_message_proxy_t;

///
/// Web message factory handler
///
typedef struct _acf_web_message_handler_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Create web message host handler for user-side
  ///
  void(ACF_CALLBACK* on_post_message)(struct _acf_web_message_handler_t* self,
                                      size_t messageCount,
                                      struct _acf_value_t* const* message);

  ///
  /// Page cache state changed.
  ///
  void(ACF_CALLBACK* on_back_forward_cache_state_changed)(
      struct _acf_web_message_handler_t* self);
} acf_web_message_handler_t;

///
/// Web message factory
///
typedef struct _acf_web_message_factory_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Create web message host handler for user-side
  ///
  struct _acf_web_message_handler_t*(ACF_CALLBACK* create_host)(
      struct _acf_web_message_factory_t* self,
      struct _acf_browser_t* browser,
      const acf_string_t* origin,
      struct _acf_frame_t* frame,
      struct _acf_web_message_proxy_t* reply_proxy);
} acf_web_message_factory_t;

///
/// Web message proxy
///
typedef struct _acf_web_message_proxy_t {
  ///
  /// Base structure.
  ///
  acf_base_ref_counted_t base;

  ///
  /// Post reply message to renderer.
  ///
  void(ACF_CALLBACK* post_web_message)(struct _acf_web_message_proxy_t* self,
                                       size_t messageCount,
                                       struct _acf_value_t* const* message);

  ///
  /// Get if page in forward-back cache
  ///
  int(ACF_CALLBACK* is_in_back_forward_cache)(
      struct _acf_web_message_proxy_t* self);
} acf_web_message_proxy_t;

#ifdef __cplusplus
}
#endif

#endif  // ACF_INCLUDE_CAPI_ACF_WEB_MESSAGE_HANDLER_CAPI_H_
