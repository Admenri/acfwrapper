// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=d812ebce3f890bd68116b953fceb85ad4b098c09$
//

#include "libacf_dll/cpptoc/domnode_callback_cpptoc.h"

#include "libacf_dll/ctocpp/domnode_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

int ACF_CALLBACK
domnode_callback_on_query_result(struct _acf_domnode_callback_t* self,
                                 acf_domnode_t* value,
                                 int count,
                                 int total) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return 0;
  }
  // Unverified params: value

  // Execute
  bool _retval = AcfDOMNodeCallbackCppToC::Get(self)->OnQueryResult(
      AcfDOMNodeCToCpp::Wrap(value), count, total);

  // Return type: bool
  return _retval;
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfDOMNodeCallbackCppToC::AcfDOMNodeCallbackCppToC() {
  GetStruct()->on_query_result = domnode_callback_on_query_result;
}

// DESTRUCTOR - Do not edit by hand.

AcfDOMNodeCallbackCppToC::~AcfDOMNodeCallbackCppToC() {}

template <>
AcfRefPtr<AcfDOMNodeCallback> AcfCppToCRefCounted<
    AcfDOMNodeCallbackCppToC,
    AcfDOMNodeCallback,
    acf_domnode_callback_t>::UnwrapDerived(AcfWrapperType type,
                                           acf_domnode_callback_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfDOMNodeCallbackCppToC,
                                   AcfDOMNodeCallback,
                                   acf_domnode_callback_t>::kWrapperType =
    WT_DOMNODE_CALLBACK;
