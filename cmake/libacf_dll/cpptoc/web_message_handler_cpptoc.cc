// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=27215cfafed57ac753683e04d7463ffd62a28a39$
//

#include "libacf_dll/cpptoc/web_message_handler_cpptoc.h"

#include "libacf_dll/ctocpp/value_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
web_message_handler_on_post_message(struct _acf_web_message_handler_t* self,
                                    size_t messageCount,
                                    acf_value_t* const* message) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }
  // Unverified params: message

  // Translate param: message; type: refptr_vec_diff_byref_const
  std::vector<AcfRefPtr<AcfValue>> messageList;
  if (messageCount > 0) {
    for (size_t i = 0; i < messageCount; ++i) {
      AcfRefPtr<AcfValue> messageVal = AcfValueCToCpp::Wrap(message[i]);
      messageList.push_back(messageVal);
    }
  }

  // Execute
  AcfWebMessageHandlerCppToC::Get(self)->OnPostMessage(messageList);
}

void ACF_CALLBACK web_message_handler_on_back_forward_cache_state_changed(
    struct _acf_web_message_handler_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }

  // Execute
  AcfWebMessageHandlerCppToC::Get(self)->OnBackForwardCacheStateChanged();
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfWebMessageHandlerCppToC::AcfWebMessageHandlerCppToC() {
  GetStruct()->on_post_message = web_message_handler_on_post_message;
  GetStruct()->on_back_forward_cache_state_changed =
      web_message_handler_on_back_forward_cache_state_changed;
}

// DESTRUCTOR - Do not edit by hand.

AcfWebMessageHandlerCppToC::~AcfWebMessageHandlerCppToC() {}

template <>
AcfRefPtr<AcfWebMessageHandler> AcfCppToCRefCounted<
    AcfWebMessageHandlerCppToC,
    AcfWebMessageHandler,
    acf_web_message_handler_t>::UnwrapDerived(AcfWrapperType type,
                                              acf_web_message_handler_t* s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfWebMessageHandlerCppToC,
                                   AcfWebMessageHandler,
                                   acf_web_message_handler_t>::kWrapperType =
    WT_WEB_MESSAGE_HANDLER;
