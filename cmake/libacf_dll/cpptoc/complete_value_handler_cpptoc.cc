// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=d4d089cc5573a98d8875251017e2b66e608f4f56$
//

#include "libacf_dll/cpptoc/complete_value_handler_cpptoc.h"

#include "libacf_dll/ctocpp/value_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK
complete_value_handler_on_complete(struct _acf_complete_value_handler_t* self,
                                   struct _acf_value_t* value) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }
  // Unverified params: value

  // Execute
  AcfCompleteValueHandlerCppToC::Get(self)->OnComplete(
      AcfValueCToCpp::Wrap(value));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfCompleteValueHandlerCppToC::AcfCompleteValueHandlerCppToC() {
  GetStruct()->on_complete = complete_value_handler_on_complete;
}

// DESTRUCTOR - Do not edit by hand.

AcfCompleteValueHandlerCppToC::~AcfCompleteValueHandlerCppToC() {}

template <>
AcfRefPtr<AcfCompleteValueHandler> AcfCppToCRefCounted<
    AcfCompleteValueHandlerCppToC,
    AcfCompleteValueHandler,
    acf_complete_value_handler_t>::UnwrapDerived(AcfWrapperType type,
                                                 acf_complete_value_handler_t*
                                                     s) {
  return nullptr;
}

template <>
AcfWrapperType AcfCppToCRefCounted<AcfCompleteValueHandlerCppToC,
                                   AcfCompleteValueHandler,
                                   acf_complete_value_handler_t>::kWrapperType =
    WT_COMPLETE_VALUE_HANDLER;
