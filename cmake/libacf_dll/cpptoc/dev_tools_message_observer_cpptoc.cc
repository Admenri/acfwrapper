// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=9100f590e41652c6f0e6559282001fd9a3a8f8d9$
//

#include "libacf_dll/cpptoc/dev_tools_message_observer_cpptoc.h"

#include "libacf_dll/ctocpp/browser_ctocpp.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void ACF_CALLBACK dev_tools_message_observer_on_dev_tools_message(
    struct _acf_dev_tools_message_observer_t* self,
    acf_browser_t* browser,
    const void* message,
    size_t message_size) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }
  // Verify param: browser; type: refptr_diff
  if (!browser) {
    return;
  }
  // Verify param: message; type: simple_byaddr
  if (!message) {
    return;
  }

  // Execute
  AcfDevToolsMessageObserverCppToC::Get(self)->OnDevToolsMessage(
      AcfBrowserCToCpp::Wrap(browser), message, message_size);
}

void ACF_CALLBACK dev_tools_message_observer_on_dev_tools_agent_attached(
    struct _acf_dev_tools_message_observer_t* self,
    acf_browser_t* browser) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }
  // Verify param: browser; type: refptr_diff
  if (!browser) {
    return;
  }

  // Execute
  AcfDevToolsMessageObserverCppToC::Get(self)->OnDevToolsAgentAttached(
      AcfBrowserCToCpp::Wrap(browser));
}

void ACF_CALLBACK dev_tools_message_observer_on_dev_tools_agent_detached(
    struct _acf_dev_tools_message_observer_t* self,
    acf_browser_t* browser) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  if (!self) {
    return;
  }
  // Verify param: browser; type: refptr_diff
  if (!browser) {
    return;
  }

  // Execute
  AcfDevToolsMessageObserverCppToC::Get(self)->OnDevToolsAgentDetached(
      AcfBrowserCToCpp::Wrap(browser));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

AcfDevToolsMessageObserverCppToC::AcfDevToolsMessageObserverCppToC() {
  GetStruct()->on_dev_tools_message =
      dev_tools_message_observer_on_dev_tools_message;
  GetStruct()->on_dev_tools_agent_attached =
      dev_tools_message_observer_on_dev_tools_agent_attached;
  GetStruct()->on_dev_tools_agent_detached =
      dev_tools_message_observer_on_dev_tools_agent_detached;
}

// DESTRUCTOR - Do not edit by hand.

AcfDevToolsMessageObserverCppToC::~AcfDevToolsMessageObserverCppToC() {}

template <>
AcfRefPtr<AcfDevToolsMessageObserver>
AcfCppToCRefCounted<AcfDevToolsMessageObserverCppToC,
                    AcfDevToolsMessageObserver,
                    acf_dev_tools_message_observer_t>::
    UnwrapDerived(AcfWrapperType type, acf_dev_tools_message_observer_t* s) {
  return nullptr;
}

template <>
AcfWrapperType
    AcfCppToCRefCounted<AcfDevToolsMessageObserverCppToC,
                        AcfDevToolsMessageObserver,
                        acf_dev_tools_message_observer_t>::kWrapperType =
        WT_DEV_TOOLS_MESSAGE_OBSERVER;
