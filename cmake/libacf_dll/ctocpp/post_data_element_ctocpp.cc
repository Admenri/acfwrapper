// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=99a900714bd94d5fbbedfc937ccd35d6def5ac55$
//

#include "libacf_dll/ctocpp/post_data_element_ctocpp.h"

// STATIC METHODS - Body may be edited by hand.

AcfRefPtr<AcfPostDataElement> AcfPostDataElement::Create() {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_post_data_element_t* _retval = acf_post_data_element_create();

  // Return type: refptr_same
  return AcfPostDataElementCToCpp::Wrap(_retval);
}

// VIRTUAL METHODS - Body may be edited by hand.

bool AcfPostDataElementCToCpp::IsReadOnly() {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_read_only)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_read_only(_struct);

  // Return type: bool
  return _retval ? true : false;
}

void AcfPostDataElementCToCpp::SetToEmpty() {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_to_empty)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_to_empty(_struct);
}

void AcfPostDataElementCToCpp::SetToFile(const AcfString& fileName) {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_to_file)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: fileName; type: string_byref_const
  if (fileName.empty()) {
    return;
  }

  // Execute
  _struct->set_to_file(_struct, fileName.GetStruct());
}

void AcfPostDataElementCToCpp::SetToBytes(size_t size, const void* bytes) {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_to_bytes)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: bytes; type: simple_byaddr
  if (!bytes) {
    return;
  }

  // Execute
  _struct->set_to_bytes(_struct, size, bytes);
}

AcfPostDataElement::Type AcfPostDataElementCToCpp::GetType() {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_type)) {
    return PDE_TYPE_EMPTY;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_postdataelement_type_t _retval = _struct->get_type(_struct);

  // Return type: simple
  return _retval;
}

AcfString AcfPostDataElementCToCpp::GetFile() {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_file)) {
    return AcfString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_file(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

size_t AcfPostDataElementCToCpp::GetBytesCount() {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_bytes_count)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  size_t _retval = _struct->get_bytes_count(_struct);

  // Return type: simple
  return _retval;
}

size_t AcfPostDataElementCToCpp::GetBytes(size_t size, void* bytes) {
  acf_post_data_element_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_bytes)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: bytes; type: simple_byaddr
  if (!bytes) {
    return 0;
  }

  // Execute
  size_t _retval = _struct->get_bytes(_struct, size, bytes);

  // Return type: simple
  return _retval;
}

// CONSTRUCTOR - Do not edit by hand.

AcfPostDataElementCToCpp::AcfPostDataElementCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfPostDataElementCToCpp::~AcfPostDataElementCToCpp() {}

template <>
acf_post_data_element_t* AcfCToCppRefCounted<
    AcfPostDataElementCToCpp,
    AcfPostDataElement,
    acf_post_data_element_t>::UnwrapDerived(AcfWrapperType type,
                                            AcfPostDataElement* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfPostDataElementCToCpp,
                                   AcfPostDataElement,
                                   acf_post_data_element_t>::kWrapperType =
    WT_POST_DATA_ELEMENT;
