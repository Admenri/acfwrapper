// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=09e5fc3c423c23fe84d9a0b589f0757b19f336cd$
//

#include "libacf_dll/ctocpp/web_socket_client_ctocpp.h"

#include "libacf_dll/cpptoc/web_socket_client_handler_cpptoc.h"
#include "libacf_dll/ctocpp/value_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

bool AcfWebSocketClientCToCpp::IsValid() {
  acf_web_socket_client_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_valid)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_valid(_struct);

  // Return type: bool
  return _retval ? true : false;
}

AcfRefPtr<AcfWebSocketClientHandler> AcfWebSocketClientCToCpp::GetHandler() {
  acf_web_socket_client_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_handler)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_web_socket_client_handler_t* _retval = _struct->get_handler(_struct);

  // Return type: refptr_diff
  return AcfWebSocketClientHandlerCppToC::Unwrap(_retval);
}

void AcfWebSocketClientCToCpp::SendMessageTo(
    acf_websocket_message_routing_t direction,
    AcfRefPtr<AcfValue> message) {
  acf_web_socket_client_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, send_message_to)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: message; type: refptr_same
  if (!message.get()) {
    return;
  }

  // Execute
  _struct->send_message_to(_struct, direction, AcfValueCToCpp::Unwrap(message));
}

void AcfWebSocketClientCToCpp::SendCloseConnectionRequest(
    acf_websocket_message_routing_t direction) {
  acf_web_socket_client_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, send_close_connection_request)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->send_close_connection_request(_struct, direction);
}

// CONSTRUCTOR - Do not edit by hand.

AcfWebSocketClientCToCpp::AcfWebSocketClientCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfWebSocketClientCToCpp::~AcfWebSocketClientCToCpp() {}

template <>
acf_web_socket_client_t* AcfCToCppRefCounted<
    AcfWebSocketClientCToCpp,
    AcfWebSocketClient,
    acf_web_socket_client_t>::UnwrapDerived(AcfWrapperType type,
                                            AcfWebSocketClient* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfWebSocketClientCToCpp,
                                   AcfWebSocketClient,
                                   acf_web_socket_client_t>::kWrapperType =
    WT_WEB_SOCKET_CLIENT;
