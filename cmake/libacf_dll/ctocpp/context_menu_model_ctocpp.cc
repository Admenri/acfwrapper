// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=cb6253689a1270c03ef4e40cc4492d7004d9a91f$
//

#include "libacf_dll/ctocpp/context_menu_model_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

bool AcfContextMenuModelCToCpp::IsSubMenu() {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_sub_menu)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_sub_menu(_struct);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::Clear() {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, clear)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->clear(_struct);

  // Return type: bool
  return _retval ? true : false;
}

size_t AcfContextMenuModelCToCpp::GetCount() {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_count)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  size_t _retval = _struct->get_count(_struct);

  // Return type: simple
  return _retval;
}

bool AcfContextMenuModelCToCpp::InsertSeparatorAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, insert_separator_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->insert_separator_at(_struct, index);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::InsertItemAt(size_t index,
                                             int command_id,
                                             const AcfString& label) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, insert_item_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: label; type: string_byref_const
  if (label.empty()) {
    return false;
  }

  // Execute
  int _retval =
      _struct->insert_item_at(_struct, index, command_id, label.GetStruct());

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::InsertCheckItemAt(size_t index,
                                                  int command_id,
                                                  const AcfString& label) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, insert_check_item_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: label; type: string_byref_const
  if (label.empty()) {
    return false;
  }

  // Execute
  int _retval = _struct->insert_check_item_at(_struct, index, command_id,
                                              label.GetStruct());

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::InsertRadioItemAt(size_t index,
                                                  int command_id,
                                                  const AcfString& label,
                                                  int group_id) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, insert_radio_item_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: label; type: string_byref_const
  if (label.empty()) {
    return false;
  }

  // Execute
  int _retval = _struct->insert_radio_item_at(_struct, index, command_id,
                                              label.GetStruct(), group_id);

  // Return type: bool
  return _retval ? true : false;
}

AcfRefPtr<AcfContextMenuModel> AcfContextMenuModelCToCpp::InsertSubMenuAt(
    size_t index,
    int command_id,
    const AcfString& label) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, insert_sub_menu_at)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: label; type: string_byref_const
  if (label.empty()) {
    return nullptr;
  }

  // Execute
  acf_context_menu_model_t* _retval = _struct->insert_sub_menu_at(
      _struct, index, command_id, label.GetStruct());

  // Return type: refptr_same
  return AcfContextMenuModelCToCpp::Wrap(_retval);
}

bool AcfContextMenuModelCToCpp::RemoveAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, remove_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->remove_at(_struct, index);

  // Return type: bool
  return _retval ? true : false;
}

int AcfContextMenuModelCToCpp::GetCommandIdAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_command_id_at)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_command_id_at(_struct, index);

  // Return type: simple
  return _retval;
}

int AcfContextMenuModelCToCpp::GetIndexOf(int command_id) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_index_of)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_index_of(_struct, command_id);

  // Return type: simple
  return _retval;
}

bool AcfContextMenuModelCToCpp::SetCommandIdAt(size_t index, int command_id) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_command_id_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->set_command_id_at(_struct, index, command_id);

  // Return type: bool
  return _retval ? true : false;
}

AcfString AcfContextMenuModelCToCpp::GetLabelAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_label_at)) {
    return AcfString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_label_at(_struct, index);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

bool AcfContextMenuModelCToCpp::SetLabelAt(size_t index,
                                           const AcfString& label) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_label_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: label; type: string_byref_const
  if (label.empty()) {
    return false;
  }

  // Execute
  int _retval = _struct->set_label_at(_struct, index, label.GetStruct());

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::IsVisibleAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_visible_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_visible_at(_struct, index);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::SetVisibleAt(size_t index, bool visible) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_visible_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->set_visible_at(_struct, index, visible);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::IsEnabledAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_enabled_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_enabled_at(_struct, index);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::SetEnabledAt(size_t index, bool enabled) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_enabled_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->set_enabled_at(_struct, index, enabled);

  // Return type: bool
  return _retval ? true : false;
}

int AcfContextMenuModelCToCpp::GetGroupIdAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_group_id_at)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_group_id_at(_struct, index);

  // Return type: simple
  return _retval;
}

bool AcfContextMenuModelCToCpp::SetGroupIdAt(size_t index, int group_id) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_group_id_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->set_group_id_at(_struct, index, group_id);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::IsCheckedAt(size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, is_checked_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_checked_at(_struct, index);

  // Return type: bool
  return _retval ? true : false;
}

bool AcfContextMenuModelCToCpp::SetCheckedAt(size_t index, bool checked) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, set_checked_at)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->set_checked_at(_struct, index, checked);

  // Return type: bool
  return _retval ? true : false;
}

AcfRefPtr<AcfContextMenuModel> AcfContextMenuModelCToCpp::GetSubMenuAt(
    size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_sub_menu_at)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_context_menu_model_t* _retval = _struct->get_sub_menu_at(_struct, index);

  // Return type: refptr_same
  return AcfContextMenuModelCToCpp::Wrap(_retval);
}

AcfContextMenuModel::MenuItemType AcfContextMenuModelCToCpp::GetTypeAt(
    size_t index) {
  acf_context_menu_model_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_type_at)) {
    return MENUITEMTYPE_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_menu_item_type_t _retval = _struct->get_type_at(_struct, index);

  // Return type: simple
  return _retval;
}

// CONSTRUCTOR - Do not edit by hand.

AcfContextMenuModelCToCpp::AcfContextMenuModelCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfContextMenuModelCToCpp::~AcfContextMenuModelCToCpp() {}

template <>
acf_context_menu_model_t* AcfCToCppRefCounted<
    AcfContextMenuModelCToCpp,
    AcfContextMenuModel,
    acf_context_menu_model_t>::UnwrapDerived(AcfWrapperType type,
                                             AcfContextMenuModel* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfContextMenuModelCToCpp,
                                   AcfContextMenuModel,
                                   acf_context_menu_model_t>::kWrapperType =
    WT_CONTEXT_MENU_MODEL;
