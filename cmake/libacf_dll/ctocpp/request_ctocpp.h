// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=9fa2677c920bfbcf23c4db1080f77d3a60600735$
//

#ifndef ACF_CTOCPP_REQUEST_CTOCPP_H_
#define ACF_CTOCPP_REQUEST_CTOCPP_H_
#pragma once

#include "include/acf_request.h"
#include "include/capi/acf_request_capi.h"
#include "libacf_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class AcfRequestCToCpp
    : public AcfCToCppRefCounted<AcfRequestCToCpp, AcfRequest, acf_request_t> {
 public:
  AcfRequestCToCpp();
  virtual ~AcfRequestCToCpp();

  // AcfRequest methods.
  bool IsReadOnly() override;
  AcfString GetURL() override;
  void SetURL(const AcfString& url) override;
  AcfString GetMethod() override;
  void SetMethod(const AcfString& method) override;
  void SetReferrer(const AcfString& referrer_url,
                   ReferrerPolicy policy) override;
  AcfString GetReferrerURL() override;
  ReferrerPolicy GetReferrerPolicy() override;
  AcfRefPtr<AcfPostData> GetPostData() override;
  void SetPostData(AcfRefPtr<AcfPostData> postData) override;
  void GetHeaderMap(HeaderMap& headerMap) override;
  void SetHeaderMap(const HeaderMap& headerMap) override;
  AcfString GetHeaderByName(const AcfString& name) override;
  void SetHeaderByName(const AcfString& name,
                       const AcfString& value,
                       bool overwrite) override;
  void Set(const AcfString& url,
           const AcfString& method,
           AcfRefPtr<AcfPostData> postData,
           const HeaderMap& headerMap) override;
  ResourceType GetResourceType() override;
  TransitionType GetTransitionType() override;
  uint64 GetIdentifier() override;
};

#endif  // ACF_CTOCPP_REQUEST_CTOCPP_H_
