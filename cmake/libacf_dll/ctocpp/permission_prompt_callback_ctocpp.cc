// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=a2c3bd47b343a99701c3d5d24efabff49144f282$
//

#include "libacf_dll/ctocpp/permission_prompt_callback_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

void AcfPermissionPromptCallbackCToCpp::Continue(
    acf_permission_request_result_t result) {
  acf_permission_prompt_callback_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, cont)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->cont(_struct, result);
}

// CONSTRUCTOR - Do not edit by hand.

AcfPermissionPromptCallbackCToCpp::AcfPermissionPromptCallbackCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfPermissionPromptCallbackCToCpp::~AcfPermissionPromptCallbackCToCpp() {}

template <>
acf_permission_prompt_callback_t*
AcfCToCppRefCounted<AcfPermissionPromptCallbackCToCpp,
                    AcfPermissionPromptCallback,
                    acf_permission_prompt_callback_t>::
    UnwrapDerived(AcfWrapperType type, AcfPermissionPromptCallback* c) {
  return nullptr;
}

template <>
AcfWrapperType
    AcfCToCppRefCounted<AcfPermissionPromptCallbackCToCpp,
                        AcfPermissionPromptCallback,
                        acf_permission_prompt_callback_t>::kWrapperType =
        WT_PERMISSION_PROMPT_CALLBACK;
