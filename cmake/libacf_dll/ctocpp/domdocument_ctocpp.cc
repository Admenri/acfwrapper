// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=bd6e530e94993ebdb78808805d0dc9b4644a4fe7$
//

#include "libacf_dll/ctocpp/domdocument_ctocpp.h"

#include "libacf_dll/ctocpp/domnode_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

AcfDOMDocument::Type AcfDOMDocumentCToCpp::GetType() {
  acf_domdocument_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_type)) {
    return DOM_DOCUMENT_TYPE_UNKNOWN;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_dom_document_type_t _retval = _struct->get_type(_struct);

  // Return type: simple
  return _retval;
}

AcfRefPtr<AcfDOMNode> AcfDOMDocumentCToCpp::GetDocument() {
  acf_domdocument_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_document)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_domnode_t* _retval = _struct->get_document(_struct);

  // Return type: refptr_same
  return AcfDOMNodeCToCpp::Wrap(_retval);
}

AcfString AcfDOMDocumentCToCpp::GetTitle() {
  acf_domdocument_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_title)) {
    return AcfString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_title(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

AcfString AcfDOMDocumentCToCpp::GetBaseURL() {
  acf_domdocument_t* _struct = GetStruct();
  if (ACF_MEMBER_MISSING(_struct, get_base_url)) {
    return AcfString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  acf_string_userfree_t _retval = _struct->get_base_url(_struct);

  // Return type: string
  AcfString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

// CONSTRUCTOR - Do not edit by hand.

AcfDOMDocumentCToCpp::AcfDOMDocumentCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

AcfDOMDocumentCToCpp::~AcfDOMDocumentCToCpp() {}

template <>
acf_domdocument_t*
AcfCToCppRefCounted<AcfDOMDocumentCToCpp, AcfDOMDocument, acf_domdocument_t>::
    UnwrapDerived(AcfWrapperType type, AcfDOMDocument* c) {
  return nullptr;
}

template <>
AcfWrapperType AcfCToCppRefCounted<AcfDOMDocumentCToCpp,
                                   AcfDOMDocument,
                                   acf_domdocument_t>::kWrapperType =
    WT_DOMDOCUMENT;
