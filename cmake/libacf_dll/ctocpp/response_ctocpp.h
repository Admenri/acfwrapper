// Copyright (c) 2025 Admenri. All rights reserved.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the ACF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=fcc624ab390f72eb4f0d2b06bb9e7b80be752dbd$
//

#ifndef ACF_CTOCPP_RESPONSE_CTOCPP_H_
#define ACF_CTOCPP_RESPONSE_CTOCPP_H_
#pragma once

#include "include/acf_response.h"
#include "include/capi/acf_response_capi.h"
#include "libacf_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class AcfResponseCToCpp : public AcfCToCppRefCounted<AcfResponseCToCpp,
                                                     AcfResponse,
                                                     acf_response_t> {
 public:
  AcfResponseCToCpp();
  virtual ~AcfResponseCToCpp();

  // AcfResponse methods.
  bool IsReadOnly() override;
  void Set(AcfRefPtr<AcfResponse> other) override;
  int GetError() override;
  void SetError(int error) override;
  int GetStatus() override;
  void SetStatus(int status) override;
  AcfString GetStatusText() override;
  void SetStatusText(const AcfString& statusText) override;
  AcfString GetMimeType() override;
  void SetMimeType(const AcfString& mimeType) override;
  AcfString GetCharset() override;
  void SetCharset(const AcfString& charset) override;
  AcfString GetHeaderByName(const AcfString& name) override;
  void SetHeaderByName(const AcfString& name,
                       const AcfString& value,
                       bool overwrite) override;
  void GetHeaderMap(HeaderMap& headerMap) override;
  void SetHeaderMap(const HeaderMap& headerMap) override;
  AcfString GetURL() override;
  void SetURL(const AcfString& url) override;
};

#endif  // ACF_CTOCPP_RESPONSE_CTOCPP_H_
